apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: apiserver-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "newsapp-ingress"
spec:
  backend:
    serviceName: apiserver-service
    servicePort: 80
# metadata:
#   name: apiserver-ingress
# #  annotations:
# #    kubernetes.io/ingress.global-static-ip-name: test-ip
#   labels:
#     app: get_latest_article_list
# spec:
#   rules:
#   - host: gitouhon-juku-k8s.ga
#     http:
#       paths:
#       - path: /
#         backend:
#           serviceName: apiserver-service
#           servicePort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: apiserver-service
spec:
  type: NodePort
  # type: LoadBalancer
  selector:
    app: get_latest_article_list
    server: api
  ports:
    - port: 80
      targetPort: 8770

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apiserver-deployment
  labels:
    app: get_latest_article_list
spec:
  replicas: 2
  selector:
    matchLabels:
      app: get_latest_article_list
      server: api
  template:
    metadata:
      labels:
        app: get_latest_article_list
        server: api
    spec:
      volumes:
        - name: data-storage
          emptyDir: {}
      containers:
        - name: go-echo
          image: gcr.io/gke-test-287910/getpost:v19
          # image: gcr.io/gke-test-287910/hello-app:v2
          imagePullPolicy: Always
          ports:
            - containerPort: 8770
          volumeMounts:
            - mountPath: /data/data-storage
              name: data-storage
